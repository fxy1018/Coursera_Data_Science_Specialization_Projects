head(L2Q1_data$A)
qplot(1, A, data = L2Q1_data) + geom_boxplot()
qqnorm(L2Q1_data$A)
qqline(L2Q1_data$A)
ggplot(x = B, data = L2Q1_data, aes(B)) + geom_density() + geom_histogram(aes(y=..density..), alpha=1/2)
qqnorm(L2Q1_data$B)
qqline(L2Q1_data$B)
summary(L2Q1_data$B)
head(L2Q1_data$B)
qplot(1, B, data = L2Q1_data) + geom_boxplot()
B_ran <- rnorm(333, mean = mean(L2Q1_data$B), sd = sd(L2Q1_data$B))
B_data <- data.frame(A = L2Q1_data$B, B = B_ran)
colnames(B_data) <- c("Column B", "My Column B")
B_melt <- melt(data=B_data)
ggplot(B_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),alpha=1/2 )+ facet_wrap(~variable)
ggplot(x = C, data = L2Q1_data, aes(C)) + geom_density() + geom_histogram(aes(y=..density..), alpha=1/2)
summary(L2Q1_data$C)
qplot(1, C, data = L2Q1_data) + geom_boxplot()
ggplot(x = C, data = L2Q1_data, aes(C)) + geom_density() + geom_histogram(aes(y=..density..), alpha=1/2)
summary(L2Q1_data$C)
head(L2Q1_data$C)
qplot(1, C, data = L2Q1_data) + geom_boxplot()
B_mean <- mean(L2Q1_data$B)
B_var <- var(L2Q1_data$B)
B_mean <- mean(L2Q1_data$B)
B_var <- var(L2Q1_data$B)
B_prob = 1-B_var/B_mean
B_size = B_mean/B_prob
B_mean <- mean(L2Q1_data$B)
B_var <- var(L2Q1_data$B)
B_mean <- mean(L2Q1_data$B)
B_var <- var(L2Q1_data$B)
B_prob = 1-(B_var/B_mean)
B_size = B_mean/B_prob
B_prob
B_size
B_mean <- mean(L2Q1_data$C)
B_var <- var(L2Q1_data$C)
B_prob = 1-(B_var/B_mean)
B_size = B_mean/B_prob
B_prob
B_size
C_ran <- rbinom(333,10,0.6)
C_mean <- mean(L2Q1_data$C)
C_var <- var(L2Q1_data$C)
C_prob = 1-(C_var/C_mean)
C_size = C_mean/C_prob
C_prob
C_size
C_ran <- rbinom(333,10,0.6)
C_data <- data.frame(A = L2Q1_data$C, B = C_ran)
colnames(C_data) <- c("Column C", "My Column C")
C_melt <- melt(data=C_data)
ggplot(C_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),alpha=1/2 )+ facet_wrap(~variable)
ggplot(x = D, data = L2Q1_data, aes(D)) + geom_density() + geom_histogram(aes(y=..density..), alpha=1/2)
head(L2Q1_data$D)
summary(L2Q1_data$D)
qplot(1, D, data = L2Q1_data) + geom_boxplot()
ggplot(x = D, data = L2Q1_data, aes(D)) + geom_density() + geom_histogram(aes(y=..density..), alpha=1/2)
ggplot(x = D, data = L2Q1_data, aes(D)) + geom_density() + geom_histogram(aes(y=..density..),binwidth = 1, alpha=1/2)
D_lambda <- as.integer(mean(L2Q1_data$D))
D_lambda
C_ran <- rbinom(333,lambda=9)
C_ran <- rpois(333,lambda=9)
D_ran <- rpois(333,lambda=9)
D_data <- data.frame(A = L2Q1_data$D, B = D_ran)
colnames(D_data) <- c("Column D", "My Column D")
D_melt <- melt(data=D_data)
ggplot(C_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),binwidth = 1, alpha=1/2 )+ facet_wrap(~variable)
ggplot(x = E, data = L2Q1_data, aes(E)) + geom_density() + geom_histogram(aes(y=..density..),binwidth = 1, alpha=1/2)
summary(L2Q1_data$E)
head(L2Q1_data$E)
qplot(1, E, data = L2Q1_data) + geom_boxplot()
X_ran <- as.integer(runif(333, min = min(L2Q1_data$X), max = max(L2Q1_data$X)+1))
ggplot(x = E, data = L2Q1_data, aes(E)) + geom_density() + geom_histogram(aes(y=..density..),binwidth = 1, alpha=1/2)
summary(L2Q1_data$E)
head(L2Q1_data$E)
qplot(1, E, data = L2Q1_data) + geom_boxplot()
E_ran <- runif(333, min = min(L2Q1_data$E), max = max(L2Q1_data$E))
E_data <- data.frame(A = L2Q1_data$E, B = E_ran)
colnames(E_data) <- c("Column E", "My Column E")
E_melt <- melt(data=E_data)
ggplot(E_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),binwidth = 1, alpha=1/2 )+ facet_wrap(~variable)
ggplot(E_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),binwidth = 1, alpha=1/5 )+ facet_wrap(~variable)
ggplot(E_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),binwidth = 1, alpha=1/4 )+ facet_wrap(~variable)
ggplot(E_melt, aes(x=value)) + geom_histogram(aes(y=..density..,color=variable),binwidth = 1, alpha=1/4 )+ facet_wrap(~variable) + geom_density()
ggplot(x = X, data = L2Q1_data, aes(X)) + geom_density() + geom_histogram(aes(y=..density..), alpha=1/2)
X_ran <- as.integer(runif(333, min = min(L2Q1_data$X), max = max(L2Q1_data$X)+1))
X_data <- data.frame(A = L2Q1_data$X, B = X_ran)
colnames(X_data) <- c("Column X", "My Column X")
X_melt <- melt(data=X_data)
ggplot(X_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),alpha=1/2 )+ facet_wrap(~variable)
X_ran
X_data <- data.frame(A = L2Q1_data$X, B = X_ran)
colnames(X_data) <- c("Column X", "My Column X")
X_melt <- melt(data=X_data)
ggplot(X_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),alpha=1/2 )+ facet_wrap(~variable)
ggplot(x = C, data = L2Q1_data, aes(C)) + geom_density() + geom_histogram(aes(y=..density..), alpha=1/2, binwidth = 1)
ggplot(C_melt, aes(x=value)) + geom_density() + geom_histogram(aes(y=..density..,color=variable),binwidth = 1, alpha=1/2 )+ facet_wrap(~variable)
file_L3<- "/Users/fanxueyi/Documents/NEU Bioinformatics/DSCS6030 Intro Data Mining:Machine Learing/Module1_Getting_to_Know_a_Data_Set/Assignment/M01_quasi_twitter.csv"
L3Q1_data <- read.csv(file_L3)
str(L3Q1_data)
dim(L3Q1_data)
L3Q1_data <- read.csv(file_L3)
str(L3Q1_data)
names(L3Q1_data)
L3Q1_data$screen_name
head(L3Q1_data)
L3Q1_data[1:20,1]
ggplot(created_at_month, data = L3Q1_data, aes(created_at_month)) + geom_density + geom_bar(aes(y=..density..), alpha = 1/2)
L3Q1_data <- read.csv(file_L3)
names(L3Q1_data)
ggplot(created_at_month, data = L3Q1_data, aes(created_at_month)) + geom_density + geom_bar(aes(y=..density..), alpha = 1/2)
ggplot(created_at_month, data = L3Q1_data, aes(x=created_at_month)) + geom_density + geom_bar(aes(y=..density..), alpha = 1/2)
ggplot(L3Q1_data$created_at_month, data = L3Q1_data, aes(x=created_at_month)) + geom_density + geom_bar(aes(y=..density..), alpha = 1/2)
ggplot(L3Q1_data$created_at_month, data = L3Q1_data) + geom_density + geom_bar(aes(y=..density..), alpha = 1/2)
qplot(L3Q1_data$created_at_month, data = L3Q1_data)+ geom_density + geom_bar(aes(y=..density..), alpha = 1/2)
qplot(created_at_month, data = L3Q1_data)
qplot(created_at_month, data = L3Q1_data, geom = "density")
qplot(created_at_month, data = L3Q1_data, geom = "density") + geom_histogram()
qplot(created_at_month, data = L3Q1_data, geom = "density") + geom_histogram() + geom_line()
qplot(created_at_month, data = L3Q1_data, geom = "density") + geom_histogram() + geom_density()
qplot(created_at_month, data = L3Q1_data) + geom_histogram() + geom_density()
qplot(created_at_month, data = L3Q1_data, geom =c("histogram" ,"density")) + geom_histogram() + geom_density()
qplot(created_at_month, data = L3Q1_data, geom ="density") + geom_histogram() + geom_density()
qplot(created_at_month, data = L3Q1_data, geom ="density", bin) + geom_bar() + geom_density()
qplot(created_at_month, data = L3Q1_data, geom ="density") + geom_bar() + geom_density(
qplot(created_at_month, data = L3Q1_data, geom ="density") + geom_bar() + geom_density()
)
qplot(created_at_month, data = L3Q1_data, geom ="density") + geom_bar() + geom_density()
qplot(created_at_month, data = L3Q1_data, geom ="density") + geom_bar()
ggplot(created_at_month, data = L3Q1_data) + geom_bar()
ggplot(created_at_month, data = L3Q1_data, aes(created_at_month)) + geom_bar()
ggplot(created_at_month, data = L3Q1_data, aes(created_at_month)) + geom_histogram()
ggplot(data = L3Q1_data, aes(x = created_at_month)) + geom_histogram(created_at_month)
qplot(created_at_month, data = L3Q1_data, aes(x = created_at_month)) + geom_histogram())
qplot(created_at_month, data = L3Q1_data, aes(x = created_at_month)) + geom_histogram()
qplot(created_at_month, data = L3Q1_data, aes(x = created_at_month))
qplot(created_at_month, data = L3Q1_data)
qplot(created_at_month, data = L3Q1_data) + scale_x_discrete(seq(1,13,1))
qplot(created_at_month, data = L3Q1_data) + scale_x_continuous(seq(1,13,1))
qplot(created_at_month, data = L3Q1_data, geom = "density")
qplot(created_at_month, data = L3Q1_data)
qplot(created_at_month, data = L3Q1_data) + scale_x_discrete()
qplot(created_at_month, data = L3Q1_data, geom = "bar") + scale_x_discrete()
qplot(created_at_month, data = L3Q1_data, geom = "bar")
qplot(created_at_month, data = L3Q1_data, geom = "barplot")
qplot(created_at_month, data=twitterdata, geom = "bar") + scale_x_discrete()
qplot(created_at_month, data = L3Q1_data, geom = "bar")
qplot(created_at_day,data=twitterdata,geom="histogram")
qplot(created_at_month, data=twitterdata, geom = "bar") + scale_x_discrete()
qplot(created_at_month, data = L3Q1_data)
qplot(created_at_month, data = L3Q1_data, aes(x=created_at_month),geom = "bar") + scale_x_discrete()
qplot(created_at_month, data = L3Q1_data,geom = "bar") + scale_x_discrete(seq(1,12,1))
qplot(created_at_month, data = L3Q1_data,geom = "bar") + scale_x_discrete()
qplot(created_at_month, data = L3Q1_data,geom = "boxplot")
summary(L3Q1_data$created_at_month)
library("ggplot2")
library("reshape2")
qplot(created_at_month, data = L3Q1_data,geom = "boxplot")
qplot(created_at_month, data = L3Q1_data) + geom_boxplot()
summary(L3Q1_data$country)
qplot(location, data = L3Q1_data,geom = "bar")
summary(L3Q1_data$location)
qplot(2, location, data = L3Q1_data) + geom_boxplot()
L3Q1_data$friends_count
qplot(friend_count, data = L3Q1_data,geom = "bar")
qplot(friends_count, data = L3Q1_data) + geom_boxplot()
qplot(friends_count, data = L3Q1_data,geom="boxplot")
qplot(1, friends_count, data = L3Q1_data,geom="boxplot")
qplot(favourited_count, data = L3Q1_data, xlim = c(0,10^4), geom = "density")
L3Q1_data$dob_month
max(L3Q1_data$dob_month)
L3Q1_data$gender
L3Q1_data$education
L3Q1_data$mobile_favourites_count
education
L3Q1_data$education
qqnorm(L3Q1_data$education)
qqline(L3Q1_data$education)
L3Q1_data$experience
L3Q1_data$race
?read.table
pairs(data)
?melt
?melt
?reshape2
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?melt
?qplot
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?qplot
?geom
summary(lm(wage~height+education, data=trim_data_mul))
trim_data_mul <- data.frame(trim_data$wage, trim_data$height, as.numeric(trim_data$race), trim_data$age, trim_data$education, trim_data$experience )
require("ggplot2")
require("reshape2")
data_url <-'http://nikbearbrown.com/YouTube/MachineLearning/M01/M01_quasi_twitter.csv'
twitter_data<- read.csv( url(data_url) )
trim_data = subset(twitter_data, gender =="female" | gender == "male")
library(lmtest)
library(nortest)
trim_data_mul <- data.frame(trim_data$wage, trim_data$height, as.numeric(trim_data$race), trim_data$age, trim_data$education, trim_data$experience )
summary(lm(wage~height+education, data=trim_data_mul))
names(trim_data_mul) <- c("wage","height","race","age", "education", "experience")
summary(lm(wage~height+education, data=trim_data_mul))
m_mul_wage_final
m_mul_wage_final <- lm(wage ~ height+education , data= trim_data_mul)
summary(m_mul_wage_final )
anova(m_mul_wage_final )
plot(wage, data=twitter_data)
plot(twitter_data$wage, data=twitter_data)
plot(twitter_data$wage, data=twitter_data, geom = "density")
plot(twitter_data$wage, data=twitter_data, geom = "boxplot")
qplot(twitter_data$wage, data=twitter_data, geom = "boxplot")
qplot(twitter_data$wage, geom = "boxplot")
qplot( twitter_data$gender, twitter_data$wage) + geom_boxplot() + ylim(0,1000)
qplot( twitter_data$gender, twitter_data$wage) + geom_boxplot()
qplot( trim_data$gender, trim_data$wage) + geom_boxplot()
lm(as.numeric(trim_data%gender),trim_data$wage)
lm(as.numeric(trim_data%gender)~trim_data$wage)
lm(as.numeric(trim_data$gender)~trim_data$wage)
summary(m_wage_gender)
m_wage_gender <- lm(as.numeric(trim_data$gender)~trim_data$wage)
summary(m_wage_gender)
plot(trim_data$gender~trim_data$wage)
qplot(trim_data$gender~trim_data$wage)
qplot(trim_data$gender~trim_data$wage,geom="dotplot")
dotplot(trim_data$gender~trim_data$wage)
plot(trim_data$gender~trim_data$wage)
qplot(wage, gender, data = trim_data )
summary(m_wage_gender)
anova(m_wage_gender)
plot(m_wage_gender)
qplot( trim_data$gender, trim_data$height) + geom_boxplot()
m_height_gender <- lm(as.numeric(trim_data$gender)~trim_data$height)
summary(m_height_gender)
anova(m_height_gender)
qplot(height, gender, data = trim_data )+stat_smooth(method="lm",se=FALSE)
plot(m_height_gender)
bptest(m_height_gender, studentize = F)
lillie.test(resid(m_height_gender))
m_height_gender <- lm(as.numeric(trim_data$gender)~trim_data$height)
summary(m_height_gender)
url = 'http://www.bls.gov/cew/data/files/2014/csv/2014_annual_singlefile.zip'
temp = tempfile()
download.file(url,temp, mode = "w")
data <- read.csv(unzip(temp), header = TRUE)
unlink(temp)
keep_data = data.frame(data[,9:15],data[,17:23], data[,25:38])
data.keep = data.frame(keep_data[,c(1:5,7:12, 14:24, 27,28)])
names(data.keep)
BLS.fit.A <- princomp(formula = ~., data.keep, cor = TRUE, na.action = na.exclude)
BLS.fit.A
dim(data)
library('ggbiplot')
ggbiplot(BLS.fit.A, labers = rownames(data.keep), obs.scale = 1, var.scale = 1)
data(wine)
wine.class
ggbiplot(BLS.fit.A, labers = rownames(data.keep), obs.scale = 1, var.scale = 1, xlim = c(-500, 10), ylim = c(-10,500))
library('ggplot')
library('ggplots')
library('ggplot2')
ggbiplot(BLS.fit.A, labers = rownames(data.keep), obs.scale = 1, var.scale = 1) + xlim(-500, 10) + ylim (-10,500)
?bpCent
BLS.fit.A
names(BLS.fit.A)
BLS.fit.A$scores
fit.A.components = BLS.fit.A$scores
fit.A.components
fit.A.components[,1]
head(fit.A.components[,1])
ggbiplot(fit.A.components[,1],fit.A.components[,2], labers = rownames(data.keep), obs.scale = 1, var.scale = 1, xlim = c(-500, 10), ylim = c(-10,500))
wine.pca <- prcomp(wine, scale. = TRUE)
ggbiplot(wine.pca, obs.scale = 1, var.scale = 1,
groups = wine.class, ellipse = TRUE, circle = TRUE) +
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
ggbiplot(wine.pca, obs.scale = 1, var.scale = 1,
groups = wine.class, ellipse = TRUE, circle = TRUE)
ggbiplot(wine.pca, obs.scale = 1, var.scale = 1,
groups = wine.class, ellipse = TRUE, circle = TRUE)
ggbiplot(wine.pca, obs.scale = 1, var.scale = 1)
biplot(wine.pca)
biplot(BLS.fit.A)
install.packages("cluster")
install.packages("amap")
install.packages("useful")
?matrix
i= 1
for (i in 5){
print i
}
for (i in 5){
print i
}
i <- 1
for (i in 5){
print i
for (i in 5){
i
}
for (i in 5){
print(i)
}
for (i in c(1:5)){
print(i)
}
for (i in range(1:5)){
print(i)
}
for (i in (1:5)){
print(i)
}
data_url <- 'https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wpbc.data'
cancer <- read.table(url(data_url), sep = ',')
dim(cancer)
qplot(x = tumor_size , data = cancer, geom = "density", group = Outcome, color = Outcome)
install.packages('mclust')
install.packages("class")
?knn
library("class")
?knn
sqrt(569)
sqrt(569)*2
?lapply
k <- 7
install.packages("C50")
install.packages("gmodels")
install.packages("rpart")
install.packages("RColorBrewer")
install.packages("tree")
install.packages("party")
data_url <- 'https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data'
cancer_data <- read.table(url(data_url), sep = ',')
head(cancer_data)
cancer_data[2]
?runif
rnif(3)
runif(3)
runif(5)
order(runif(3))
?order
a <- c(1,10,2)
order(a)
?rpart
?printcp
install.packages("e1071")
install.packages("kernlab")
?svm
library("e1071")
?svm
?plot
y<-c(rep(-1,10),rep(1,10))
?matrix
y
?plot
?lm
?glm
?glm
?rmse
?svm
linear.tune.out <- tune(svm, cancer.train.target~., data=cancer.train, kernel="linear", ranges= list(cost=c(0.0001, 0.01, 0.1, 1,5,10,100)))
linear.tune.out <- tune(svm, cancer.train.target, cancer.train, kernel="linear", ranges= list(cost=2^(-2:4)))
library("MASS")
?lda
?predict
cancer.normalized.lda.pred <- predict(cancer.normalized.lda, newdata = cancer.normalized.test)
pca
?pca
?princomp
?kmeans
library("RTextTools")
library("e1071")
library("qdap")
library("tm")
tweets.url <- "http://nikbearbrown.com/YouTube/MachineLearning/M08/ML.Tweets.csv"
tweets.new.url <- "http://nikbearbrown.com/YouTube/MachineLearning/M08/ML.Tweets.New.csv"
tweets <- read.csv(url(tweets.url), header=F)
tweets.new <- read.csv(url(tweets.new.url), header=F)
str(tweets)
str(tweets.new)
has_tag <- function(x){
grepl("#[_a-zA-Z1-9]+",x)
}
tag_result <- apply(tweets, 1, has_tag)
tweets_ht <- tweets[which(tag_result),]
head(tweets_ht)
#remove all non-english message
clean_sub <- function(x){
x <- tolower((x))
#remove all puncuation except #
gsub("(?!#)[[:punct:]]", "",perl=T,
#remove all control characters
#remove all digit
#remove the users
#remove all url
head(tweets_clean)
}
gsub("(https?://[^ ]+)","",x)))))
gsub("\\d+","",
tweets_clean <- apply(as.data.frame(tweets_ht), 1, clean_sub)
gsub("@([_a-zA-Z1-9]+)","",
gsub("[[:cntrl:]]", "",
clean_sub <- function(x){
}
}
has_tag <- function(x){
grepl("#[_a-zA-Z1-9]+",x)
}
tag_result <- apply(tweets, 1, has_tag)
tweets_ht <- tweets[which(tag_result),]
head(tweets_ht)
#remove all non-english message
clean_sub <- function(x){
x <- tolower((x))
#remove all puncuation except #
gsub("(?!#)[[:punct:]]", "",perl=T,
#remove all control characters
#remove all digit
#remove the users
#remove all url
gsub("\\d+","",
gsub("[[:cntrl:]]", "",
gsub("@([_a-zA-Z1-9]+)","",
gsub("(https?://[^ ]+)","",x)))))
}
tweets_clean <- apply(as.data.frame(tweets_ht), 1, clean_sub)
head(tweets_clean)
#Extract all hashtags
hashtags_re <- function(line){
m <- gregexpr("#([_a-zA-Z1-9]+)", line)
return(regmatches(line,m))
}
tweets_clean <- as.data.frame(tweets_clean)
result_hashtag <- apply(tweets_clean, 1, hashtags_re)
head(result_hashtag)
#rank the hashtag according to their tf-idf
hashtags.corpus <- Corpus(VectorSource(result_hashtag))
inspect(hashtags.corpus)
hashtags.tdm <- TermDocumentMatrix(hashtags.corpus, control=list(removePunctuation=T))
dim(hashtags.tdm)
m<- as.matrix(hashtags.tdm)
term_nums <- rowSums(m)
tweets_sum <- rowSums(m!=0)
#calculate tf of each hashtag
tf <- term_nums/tweets_sum
rm(list=ls())
library("venneuler")
library('VennDiagram')
#set the working directory
path <- "/Users/fanxueyi/Documents/Bhasin's_Lab_Work/Project/Project2_meta-analysis_of_alternative_therapies/Genesets_o/Venn"
setwd(path)
file <- "GO_ALL.csv"
library('ggplot2')
#set the working directory
path <- "/Users/fanxueyi/Documents/Bhasin's_Lab_Work/Project/Project2_meta-analysis_of_alternative_therapies/Genesets_o/Venn"
setwd(path)
file <- "GO_ALL.csv"
all <- read.csv(file, header = T)
rm(list=ls())
library("venneuler")
library('VennDiagram')
library('ggplot2')
#set the working directory
path <- "/Users/fanxueyi/Documents/Bhasin's_Lab_Work/Project/Project2_meta-analysis_of_alternative_therapies/Genesets_o/Venn"
setwd(path)
path <- "/Users/fanxueyi/Documents/Bhasin's_Lab_Work/Project/Project2_meta-analysis_of_alternative_therapies/Genesets_o/Venn/"
setwd(path)
?system.file
update.packages()
qunif(0.75)
pnorm(90, mean=80, sd=10)
pnorm(70, mean=80, sd=10)
qnorm(0.95, mean=1100, sd =75)
qnorm(0.95, mean=100, sd =75)
qnorm(0.95, mean=1100, sd =75/sqrt(100))
choose(5,4)*0.5^^5
choose(5,4)*0.5**5
choose(5,4)*0.5**5+choose(5,5)*0.5**5
pnorm(1) - pnorm(-1)
ppois(10, lambda = 15)
rnorm(1)
rnorm(2)
rnorm(100)
pnorm(0)
?gl
install.packages('rsconnect')
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='ruobin',
token='D79DA1771C3FF455A124C3A27DC76417',
secret='<SECRET>')
library('rsconnect')
rsconnect::setAccountInfo(name='ruobin',
token='D79DA1771C3FF455A124C3A27DC76417',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ruobin',
token='D79DA1771C3FF455A124C3A27DC76417',
secret='vU3zINSn4WKHgkafnxGBpy9z75XhuXbodkYgUuUo')
rsconnect::deployApp('path/to/your/app')
rsconnect::deployApp('~/Desktop/')
rsconnect::deployApp('~/')
rsconnect::deployApp('~')
shiny::runApp('~/Project9App')
shiny::runApp('~/Desktop/')
runApp('~/Desktop/currency_converter')
rsconnect::setAccountInfo(name='fxy27',
token='0C734871639A2B8AE44E4E1E6DB45662',
secret='ZmvpUuCWBFmwysH8G4xQyA036YgTDzNoLwCtOCuU')
shiny::runApp('~/Github/Coursera_Data_Science_Specialization_Projects/DataProducts-master')
